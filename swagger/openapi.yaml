openapi: 3.0.0
info:
  version: 1.0.0
  title: Manabiya AI API Document
  description: This is Manabiya AI Agent API Document.
servers:
  - url: http://localhost:3001
paths:
  /:
    get:
      description: |
        Display Hello AI
      operationId: cmd_hello_ai
      responses:
        '200':
          description: Outputs AI Agent's self-introduction text.
          content:
            plain/text:
              example: Hello AI.
  /chats_as_student:
    post:
      description: |
        Let AI answer questions from students.
      operationId: cmd_chats_as_student
      parameters: []
      requestBody:
        description: chat messages reference.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefrenceRequest'
            example:
              reference: "chats/2024-1-1-daisuke.suzuki"
      responses:
        '200':
          description: response chat message from AI.
          content:
            text/plain:
              schema:
                type: string
              example:
                I answer your question.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /chats_as_teacher:
    post:
      description: |
        Let AI answer questions from teature.
      operationId: cmd_chats_as_teacher
      parameters: []
      requestBody:
        description: chat messages reference.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefrenceRequest'
            example:
              reference: "chats/2024-1-1-daisuke.suzuki-english-teacher"
      responses:
        '200':
          description: response chat message from AI.
          content:
            text/plain:
              schema:
                type: string
              example:
                I answer your question.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /create_agenda:
    post:
      description: |
        Create lesson agenda data from textbook.
      operationId: cmd_create_agenda
      parameters: []
      requestBody:
        description: create agenda for lesson.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefrenceRequest'
            example:
              reference: "2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau"
              start_page: 1
              finish_page: 3
              notice: ["nama.nama", "name.name", "name.name", "namae.nmamae"]
      responses:
        '200':
          description: Return agenda_draft data path.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResult'
              example:
                reference: "2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau"
                feilds: {
                  agenda: "agenda_draft"
                }
                
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /create_questions:
    post:
      description: |
        Create questions from textbook data and class audio data.
      operationId: cmd_create_questions
      parameters: []
      requestBody:
        description: create questions after lesson.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefrenceRequest'
            example:
              reference: "2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau"
              notice: ["nama.nama", "name.name", "name.name", "namae.nmamae"]
      responses:
        '200':
          description: Return questions_draft data path.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResult'
              example:
                reference: "2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau"
                feilds: {
                  questions: "questions_draft"
                }
        default:
          description: unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /answered_questions:
    post:
      description: |
        Answered questions from student.
        Grade the answers and executes up to homework creation.
      operationId: cmd_answered_questions
      parameters: []
      requestBody:
        description: You will be notified that you have answered and submitted the questions.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefrenceRequest'
            example:
              reference: "2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau/student/souta.hasegawa"
              notice: ["nama.nama", "souta.hasegawa"]
      responses:
        '200':
          description: Return questions_result and homework data path.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResult'
              example:
                reference: "2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau/student/souta.hasegawa"
                feilds: {
                  questions_result: "questions_result",
                  homework: "homework"
                }
        default:
          description: unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /submit_homework:
    post:
      description: |
        Submit your homework. Perform homework grading and store results.
      operationId: cmd_answered_homework
      parameters: []
      requestBody:
        description: You will be notified that you have answered and submitted the questions.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefrenceRequest'
            example:
              reference: "2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau/students/souta.hasegawa"
              notice: ["nama.nama", "souta.hasegawa"]
      responses:
        '200':
          description: Return homework data path.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResult'
              example:
                reference: "2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau/students/souta.hasegawa"
                feilds: {
                  homework_result: "homework_result"
                }
        default:
          description: unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /create_summary:
    post:
      description: |
        As soon as the teacher completes the questions, it will make a request to analyze the questions.
      operationId: cmd_create_summary
      parameters: []
      requestBody:
        description: Summarize quizzes and create analysis results.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefrenceRequest'
            example:
              reference: "2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau"
              notice: ["nama.nama", "souta.hasegawa"]
      responses:
        '200':
          description: Return summary data path.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResult'
              example:
                reference: "2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau"
        default:
          description: unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    RefrenceRequest:
      type: object
      required:
        - reference
      properties:
        reference:
          type: string
          description: firestore reference path.
          example: '2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau'
        start_page:
          type: integer
          description: first page of lesson.
        finish_page:
          type: integer
          description: last page of lesson.
        notice:
          type: array
          description: list of notice user.name.
          items:
            type: string
    CreateResult:
      type: object
      required:
        - reference
        - field
      properties:
        reference:
          type: string
          description: created data reference path.
          example: '2023/1-1/common/english/lessons/ayiiF5ZAkPKCV6Y99Dau'
        field:
          type: object
          description: stored field names.
          properties:
            agenda:
              type: string
              description: agenda field name.
            questions:
              type: string
              description: questions field name.
            questions_result:
              type: string
              description: questions_result field name.
            homework:
              type: string
              description: homework field name.
            homework_result:
              type: string
              description: homework_result field name.
    Error:
      type: object
      required:
        - code
        - type
        - message
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
externalDocs:
  description: Find out more about Swagger.
  url: http://swagger.io
